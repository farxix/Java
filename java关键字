final关键字   

声明类可以把类定义为不能继承的，即最终类；

或者用于修饰方法，该方法不能被子类重写，可以继承。
final class 类名 {}

实例变量被定义final的变量不能被修改。（只能赋值一次，赋值后不再改变）

不能用于修饰构造方法



static   
    表示“全局”或者“静态”，用于修饰成员变量和成员方法，也可以形成静态static代码块，但是java中没有全局变量的概念。
被static修饰的成员变量和成员方法独立于该类的任何对象。不依赖类的实例，被类的所以实例共享。static对象可以在对象创建前访问，不需引用任何对象。

static修饰叫 静态变量或类变量。没有被修饰叫 实例变量。
区别：JVM只为静态分配一次内存。对于实例变量每创建一个实例，就分配一次内存。
静态方法不能用this和super。

static代码块，静态代码块。只能被执行一次。



abstract
可以修饰类或方法，可以增加子类，但不能直接实例化。
abstract方法不在声明它的类中实现，但必须在某个子类中重写
不能应用于static、privat、final方法，因为这些方法不能被重写。
有抽象方法的都是抽象类，但是抽象类中不一定都是抽象方法。


implements 是实现某个接口的意思。


hashMap 是非线程安全，异步，key、value可以为空,继承AbstractMap；
hashTable 是线程安全，同步，有contains()，继承Dictionary；


三者在执行速度方面的比较：StringBuilder >  StringBuffer  >  String
StringBuilder：线程非安全的

StringBuffer：线程安全的

对于三者使用的总结： 
1.如果要操作少量的数据用 = String
2.单线程操作字符串缓冲区 下操作大量数据 = StringBuilder
3.多线程操作字符串缓冲区 下操作大量数据 = StringBuffer



==比较的是对象的地址,也就是是否是同一个对象; equal比较的是对象的值。


整数类型byte short int long 浮点型 float double 字符型 char 布尔型 boolean
boolean Boolean  封装类
char Character
byte Byte
short Short
int Integer
long Long
float Float
double Double


Iterator中两个方法:

hasNext(),是判断当前元素是否存在，并指向下一个元素（即所谓的索引）；
next（），则是返回当前元素，并指向下一个元素。

trim() 函数的功能是去掉首尾空格


